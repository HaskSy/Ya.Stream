
plugins {
    id 'java'
    id 'war'
    id 'org.springframework.boot' version '3.1.5'
    id 'io.spring.dependency-management' version '1.1.3'
    id "org.openapi.generator" version "6.4.0"
}

group = 'com.gvsem'
version = '0.0.1-SNAPSHOT'

//java {
//    toolchain {
//        languageVersion.set(JavaLanguageVersion.of(17))
//    }
//}

sourceSets {
    main {
        java {
            srcDir("$rootDir/src/main/java")
            srcDir("$buildDir/generated/openapi/src/main/java")
        }
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    //runtimeOnly 'com.h2database:h2'
    implementation 'org.postgresql:postgresql'

    implementation 'javax:javaee-api:8.0'
    implementation 'javax.annotation:javax.annotation-api:1.3.2'

    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"

    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'

    implementation 'org.springframework.security:spring-security-core:6.1.5'
    implementation 'org.springframework.security:spring-security-web:6.1.5'
    implementation 'org.springframework.security:spring-security-config:6.1.5'

    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    compileOnly 'org.projectlombok:lombok'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'org.junit.jupiter:junit-jupiter-engine'

    /* API Generation */
    implementation "org.openapitools:jackson-databind-nullable:0.2.4"
    implementation "com.fasterxml.jackson.datatype:jackson-datatype-jsr310"
    implementation "javax.validation:validation-api:1.1.0.Final"

    implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.0"

    implementation 'org.glassfish.jersey.core:jersey-common:2.34'

    implementation 'org.json:json:20230618'

}

tasks.named('bootBuildImage') {
    builder = 'paketobuildpacks/builder-jammy-base:latest'
}

tasks.named('test') {
    useJUnitPlatform()
}

springBoot {
    mainClass = 'com.gvsem.ya_stream.Application'
}

import org.openapitools.generator.gradle.plugin.tasks.GenerateTask

tasks.create("openApiGenerate_API", GenerateTask.class, {
    generatorName = "spring"
    inputSpec = "$rootDir/src/main/resources/static/api/api.yaml".toString()
    outputDir = "$buildDir/generated/openapi".toString()
    apiPackage = "com.gvsem.ya_stream.api"
    modelPackage = "com.gvsem.ya_stream.dto"
    configOptions = [
            delegatePattern: "true",
            library: "spring-boot",
            dateLibrary : "java8",
            useTags: "true",
            unhandledException: "true",
            additionalModelTypeAnnotations: "@com.fasterxml.jackson.annotation.JsonInclude(com.fasterxml.jackson.annotation.JsonInclude.Include.NON_NULL)",
            useSwaggerUI: "false",
    ]
    typeMappings = [
            "file" : "org.springframework.web.multipart.MultipartFile"
    ]
})

compileJava.dependsOn tasks.openApiGenerate_API

